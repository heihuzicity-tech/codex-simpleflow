name: cc-think
summary: Deep analysis and proposal before implementation; optional spec updates on confirmation
reads:
  - .specs/project.yml
  - .specs/features/{feature}/requirements.md
  - .specs/features/{feature}/design.md
  - .specs/features/{feature}/tasks.md
writes:
  - .specs/features/{feature}/sessions/{utc_id}/reports/think-<level>-<ts>.md
  - .specs/features/{feature}/{requirements.md,design.md,tasks.md} (only when confirmed)
  - .specs/features/{feature}/sessions/{utc_id}/reports/think-<ts>.patch (optional)
prechecks:
  - For proposal-only mode: none
  - For specs edits: run guard-no-win-scripts.sh and validate YAML/markdown structure
parameters:
  - level: v1|v2|v3 (default: v2)
  - scope: requirements|design|tasks|all (default: all)
  - propose: none|patch|write (default: none)
  - sid: optional session id to attach report
flow:
  - Select level based on complexity: v1 (basic), v2 (multi-angle), v3 (system-wide)
  - Analyze problem, impacts on specs, trade-offs, and risks with rollback strategy
  - Produce a proposal including affected anchors/refs; write report to session
  - If propose=patch: generate a patch file with suggested edits (do not apply)
  - If propose=write: present a preview diff; apply edits only after explicit confirmation
confirmations:
  - Any edits to requirements/design/tasks (propose=write)
  - Applying a patch generated by this command
rollback:
  - On rejection or failure, do not apply changes; keep proposal report only

